{"ast":null,"code":"var _jsxFileName = \"/Users/desilee/books/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport BookCreate from \"./components/BookCreate\";\nimport BookList from \"./components/BookList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const editBookById = (id, newTitle) => {\n    const updatedBooks = books.map(() => {});\n  };\n  const deleteBookById = id => {\n    // takes the id of book that we want to delete and pass it down therough the props system to BookList component\n    // then from BookList comp. we forward that function the every copy of BookShow\n    const updatedBooks = books.filter(book => {\n      return book.id !== id; // if the book is not eq ual to the id\n    });\n\n    setBooks(updatedBooks);\n  };\n  const createBook = title => {\n    // it's going to receive an argument of whatevr title the user puts in.So when we call createBook we need to make sure we use as an argument the title the user input\n    const updatedBooks = [...books, {\n      id: Math.round(Math.random() * 9999),\n      title\n    } // each book will have a random id\n    ]; // could write title: tile, but JS allows us to just use title instead in the new object refering to the new title the user will add\n    setBooks(updatedBooks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      onDelete: deleteBookById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookCreate, {\n      onCreate: createBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/iW9mSwgc4d+8Agrl++FSS1ccl8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BookCreate","BookList","jsxDEV","_jsxDEV","App","_s","books","setBooks","editBookById","id","newTitle","updatedBooks","map","deleteBookById","filter","book","createBook","title","Math","round","random","className","children","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","_c","$RefreshReg$"],"sources":["/Users/desilee/books/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport BookCreate from \"./components/BookCreate\";\nimport BookList from \"./components/BookList\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  const editBookById = (id, newTitle) => {\n    const updatedBooks = books.map(() => {});\n  };\n\n  const deleteBookById = (id) => {\n    // takes the id of book that we want to delete and pass it down therough the props system to BookList component\n    // then from BookList comp. we forward that function the every copy of BookShow\n    const updatedBooks = books.filter((book) => {\n      return book.id !== id; // if the book is not eq ual to the id\n    });\n\n    setBooks(updatedBooks);\n  };\n\n  const createBook = (title) => {\n    // it's going to receive an argument of whatevr title the user puts in.So when we call createBook we need to make sure we use as an argument the title the user input\n    const updatedBooks = [\n      ...books,\n      { id: Math.round(Math.random() * 9999), title }, // each book will have a random id\n    ]; // could write title: tile, but JS allows us to just use title instead in the new object refering to the new title the user will add\n    setBooks(updatedBooks);\n  };\n\n  return (\n    <div className=\"app\">\n      <BookList books={books} onDelete={deleteBookById} />\n      <BookCreate onCreate={createBook} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAGA,CAACC,EAAE,EAAEC,QAAQ,KAAK;IACrC,MAAMC,YAAY,GAAGL,KAAK,CAACM,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,cAAc,GAAIJ,EAAE,IAAK;IAC7B;IACA;IACA,MAAME,YAAY,GAAGL,KAAK,CAACQ,MAAM,CAAEC,IAAI,IAAK;MAC1C,OAAOA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC;;IAEFF,QAAQ,CAACI,YAAY,CAAC;EACxB,CAAC;EAED,MAAMK,UAAU,GAAIC,KAAK,IAAK;IAC5B;IACA,MAAMN,YAAY,GAAG,CACnB,GAAGL,KAAK,EACR;MAAEG,EAAE,EAAES,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;MAAEH;IAAM,CAAC,CAAE;IAAA,CAClD,CAAC,CAAC;IACHV,QAAQ,CAACI,YAAY,CAAC;EACxB,CAAC;EAED,oBACER,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACiB,QAAQ,EAAEV;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpDxB,OAAA,CAACH,UAAU;MAAC4B,QAAQ,EAAEZ;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACtB,EAAA,CAhCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}