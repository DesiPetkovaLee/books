{"ast":null,"code":"import _slicedToArray from\"/Users/desilee/books/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";// 2\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BookCreate(_ref){var onCreate=_ref.onCreate;// 1 ---> it receives the prop onCreate which was created already in App.js\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];// 3 --> the arg is an empty string as by default the input will appear empty\n//  4\nvar handleChange=function handleChange(event){setTitle(event.target.value);// we want to look at what the user typed in the input el. i.e. the event!!\n};// almost always use value and props like onChange in the input element!\n// 5\nvar handleSubmit=function handleSubmit(event){event.preventDefault();onCreate(title);// onCreate we pass in the title the user entered\nsetTitle(\"\");// updating our piece of state by setting it to empty string --> emptying the text that user types automatically instead of manually\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"book-create\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add a Book\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",value:title,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",children:\"Create!\"})]})]});}export default BookCreate;","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","BookCreate","_ref","onCreate","_useState","_useState2","_slicedToArray","title","setTitle","handleChange","event","target","value","handleSubmit","preventDefault","className","children","onSubmit","onChange"],"sources":["/Users/desilee/books/src/components/BookCreate.js"],"sourcesContent":["import { useState } from \"react\"; // 2\n\nfunction BookCreate({ onCreate }) {\n  // 1 ---> it receives the prop onCreate which was created already in App.js\n  const [title, setTitle] = useState(\"\"); // 3 --> the arg is an empty string as by default the input will appear empty\n  //  4\n  const handleChange = (event) => {\n    setTitle(event.target.value); // we want to look at what the user typed in the input el. i.e. the event!!\n  };\n\n  // almost always use value and props like onChange in the input element!\n\n  // 5\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onCreate(title); // onCreate we pass in the title the user entered\n    setTitle(\"\"); // updating our piece of state by setting it to empty string --> emptying the text that user types automatically instead of manually\n  };\n\n  return (\n    <div className=\"book-create\">\n      <h3>Add a Book</h3>\n      <form onSubmit={handleSubmit}>\n        <label>Title</label>\n        <input className=\"input\" value={title} onChange={handleChange} />\n        <button className=\"button\">Create!</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BookCreate;\n"],"mappings":"0GAAA,OAASA,QAAQ,KAAQ,OAAO,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAe,IAAZ,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC5B;AACA,IAAAC,SAAA,CAA0BR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAAkB;AACxC;AACA,GAAM,CAAAI,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CAC9BF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE;AAChC,CAAC,CAED;AAEA;AACA,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIH,KAAK,CAAK,CAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC,CACtBX,QAAQ,CAACI,KAAK,CAAC,CAAE;AACjBC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChB,CAAC,CAED,mBACER,KAAA,QAAKe,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BlB,IAAA,OAAAkB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBhB,KAAA,SAAMiB,QAAQ,CAAEJ,YAAa,CAAAG,QAAA,eAC3BlB,IAAA,UAAAkB,QAAA,CAAO,OAAK,CAAO,CAAC,cACpBlB,IAAA,UAAOiB,SAAS,CAAC,OAAO,CAACH,KAAK,CAAEL,KAAM,CAACW,QAAQ,CAAET,YAAa,CAAE,CAAC,cACjEX,IAAA,WAAQiB,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,SAAO,CAAQ,CAAC,EACvC,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAf,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}